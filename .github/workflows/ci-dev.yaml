name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - dev-demo

env:
  IMAGE_TAG: ${{ github.sha }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MONGODB_URL: mongodb://mongo:27017/medium-db
  JWT_SECRET: N4tS4f3!23

jobs:
  setup-env:
    name: Setup environment
    runs-on: ubuntu-20.04
    container:
      image: node:16
    defaults:
      run:
        shell: bash
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> $GITHUB_ENV

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ env.YARN_CACHE_DIR }}
          key: ${{ github.repository }}-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ github.repository }}-${{ runner.os }}-yarn-

      - name: Install node dependencies to populate cache
        run: yarn install
  deploy_dev:
    name: Deploy app to dev
    runs-on: ubuntu-latest
    needs:
      - setup-env
    environment: Development
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> $GITHUB_ENV

      - name: Cache node modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.YARN_CACHE_DIR }}
          key: ${{ github.repository }}-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ github.repository }}-${{ runner.os }}-yarn-
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - name: See Directory and files
        run: |
          ls -la
      - name: Docker build and push
        run: |
          docker build -f ./Dockerfile -t makinhs/nest-graphql:${{ github.sha }} .
          docker push makinhs/nest-graphql:latest
